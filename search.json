[
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "exploration.html#title-2-header",
    "href": "exploration.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 1\nProject 2\nProject 3\nProject 4\nProject 5",
    "crumbs": [
      "DS250 Projects"
    ]
  },
  {
    "objectID": "projects.html#repo-for-all-my-projects",
    "href": "projects.html#repo-for-all-my-projects",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 1\nProject 2\nProject 3\nProject 4\nProject 5",
    "crumbs": [
      "DS250 Projects"
    ]
  },
  {
    "objectID": "Projects/project3.html",
    "href": "Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Uncomment the entire section to use this template\n\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 3"
    ]
  },
  {
    "objectID": "Projects/project5.html",
    "href": "Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Uncomment the entire section to use this template\n\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "Projects/project4.html",
    "href": "Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Uncomment the entire section to use this template\n\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 4"
    ]
  },
  {
    "objectID": "cleansing.html",
    "href": "cleansing.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "cleansing.html#title-2-header",
    "href": "cleansing.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "competition.html",
    "href": "competition.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "competition.html#title-2-header",
    "href": "competition.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "ml.html#title-2-header",
    "href": "ml.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Logan Clark",
    "section": "",
    "text": "(208)530-1980 | loganjclark@gmail.com | www.linkedin.com/in/logan-clark\n\nEducation\nBachelors of Science | Brigham Young University - Idaho | Rexburg, Idaho January 2021 - Present\n\n\n\nMajor in Computer Information Technology\n\n\nGPA: 3.8\n\n\nDiploma, Skyline High School\n\n\n\nParticipated in baseball all four years.\nReceived a certification in Word and PowerPoint.\n\n\n\n\nTechnical Skills\n\nProgramming Languages: C# | Python | MySQL\n\n\nExperience with CLI to solve problems with databases as well as creating and managing filesytems. | Able to work proficiently in a team scenario as well as manage a team.\n\n\n\n\nProjects\n\nWrote a contact book application using python to store personal contacts. This project included locally storing the data, adding new contact records, deleting, and modifying existing contact records and the ablility to look up information by contact phone number.\n\n\nDeveloped a point tracking system for stores using C#. Functionality delivered included the ability to parse a receipt and store specific information in a text file as well as keeping a record of point totals and your reward level.\nDesigned a database to be used by a Major League Baseball team (MLB). This includes an Entity Relationship Diagram (ERD) that shows the relationships between all the different tables.\nCurrently I am working on a website for my web frontend development class. I am coding it in HTML, CSS, and JavaScript.\n\n\n\nExperience\nSales Representative | ZAGG | Idaho Falls, Idaho 2021- Present\n\n\n\nAccomplished daily tasks that were assigned to me.\nEffectively communicate sales and promotions.\nResponsible for closing and counting the till.\nFixed customers phones.\nProblem solved why phones were not working.\n\nSales Representative | Aptive Enviromental | Fort Worth, Texas Summer 2022\n\n\n\nSold pest control door to door.\nEffectively communicated to customers about the service and products.\nWas independently contracted.\nWas able to work alone efficiently.\n\nMissionary | Church of Jesus Christ of Latter-day Saints | Sacramento, California 2018 - 2020\n\n\n\nAccomplished daily tasks on a schedule.\nProvided service to the community and others.\nIn a leadership position to help guide and direct those in my area.\nAble to overcome challenges and hardships.\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Projects/project1.html",
    "href": "Projects/project1.html",
    "title": "Client Report - Whats in a name?",
    "section": "",
    "text": "The use of bible names like Peter, Mary, and Matha have all seen a decrease in usage. On the other hand names like Dominica and Logan have a seen a dramatic increase in usage. If you were born before 1980 you would be named from the bible. If you were born after 1980 you would be named from a more modern book or movie.\n\n\nRead and format project data\n# Include and execute your code here\ndf = pd.read_csv(\"https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv\")",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "Projects/project1.html#elevator-pitch",
    "href": "Projects/project1.html#elevator-pitch",
    "title": "Client Report - Whats in a name?",
    "section": "",
    "text": "The use of bible names like Peter, Mary, and Matha have all seen a decrease in usage. On the other hand names like Dominica and Logan have a seen a dramatic increase in usage. If you were born before 1980 you would be named from the bible. If you were born after 1980 you would be named from a more modern book or movie.\n\n\nRead and format project data\n# Include and execute your code here\ndf = pd.read_csv(\"https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv\")",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "Projects/project1.html#birth-name",
    "href": "Projects/project1.html#birth-name",
    "title": "Client Report - Whats in a name?",
    "section": "Birth Name",
    "text": "Birth Name\nHow does your name at your birth year compare to its use historically?\nFor my name and it’s use historically it is in the middle of it’s popularity. From 2000 and on you can see a huge increase in use of the name of Logan.\n\n\nRead and format data\n# Include and execute your code here\nfig = px.line(df.query('name == \"Logan\"'),\n  x=\"year\", \n  y=\"Total\", \n  color='name', \n  title='The Name Logan Used Per Year')\n\nfig.add_shape(\n    dict(\n        type='line',\n        x0=2000,\n        x1=2000,\n        y0=0,\n        y1=10000,\n        line=dict(color='red', dash='dash'),\n    )\n)\n\nfig.add_annotation(\n    x=2000,\n    y=10000,\n    text='Birth Year',\n    showarrow=True,\n    arrowhead=1,\n)\n\nfig.show()",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "Projects/project1.html#age-of-brittany",
    "href": "Projects/project1.html#age-of-brittany",
    "title": "Client Report - Whats in a name?",
    "section": "Age of Brittany",
    "text": "Age of Brittany\nIf you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?\nI would guess the age of 34 years old. The ages that I would not guess are between 44 years old and older as well as 23 years old and younger.\n\n\nRead and format data\n# Include and execute your code here\nfig = px.line(df.query('name == \"Brittany\"'),\n  x=\"year\", \n  y=\"Total\", \n  color='name', \n  title='The Name Brittany Used Per Year')\n\nfig.add_shape(\n    dict(\n        type='line',\n        x0=1990,\n        x1=1990,\n        y0=0,\n        y1=40000,\n        line=dict(color='red', dash='dash'),\n    )\n)\n\nfig.add_annotation(\n    x=1990,\n    y=40000,\n    text='34 Years Old',\n    showarrow=True,\n    arrowhead=4,\n\n)\n\nfig.show()",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "Projects/project1.html#bible-names",
    "href": "Projects/project1.html#bible-names",
    "title": "Client Report - Whats in a name?",
    "section": "Bible Names",
    "text": "Bible Names\nMary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?\nI noticed that all the names were popular during 1940 and 1960 but they became less popular after 1980.\n\n\nRead and format data\n# Include and execute your code here\n\nfig = px.line(df.query('name == [\"Paul\",\"Mary\",\"Martha\",\"Peter\"] and year &gt; 1920 and year &lt; 2000'),\n  x=\"year\", \n  y=\"Total\", \n  color='name', \n  title='Names Used Per Year')\n\nfig.add_shape(\n    dict(\n        type='line',\n        x0=1950,\n        x1=1950,\n        y0=0,\n        y1=max(df['Total']),\n        line=dict(color='pink', dash='dash'),\n    )\n)\n\nfig.add_annotation(\n    x=1950,\n    y=54000,\n    text='Mary',\n    showarrow=True,\n    arrowhead=4,\n\n)\n\nfig.add_annotation(\n    x=1950,\n    y=22000,\n    text='Paul',\n    showarrow=True,\n    arrowhead=4,\n\n)\n\nfig.add_annotation(\n    x=1940,\n    y=9000,\n    text='Martha',\n    showarrow=True,\n    arrowhead=4,\n\n)\n\nfig.add_annotation(\n    x=1930,\n    y=3300,\n    text='Peter',\n    showarrow=True,\n    arrowhead=4,\n    ax=0,\n    ay=-40\n\n)\n\nfig.show()",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "Projects/project1.html#popular-movie-name",
    "href": "Projects/project1.html#popular-movie-name",
    "title": "Client Report - Whats in a name?",
    "section": "Popular Movie Name",
    "text": "Popular Movie Name\nThink of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?\nThe release of the first fast and furious was in 2001 and for the next couple of years there was a huge jump in the use of the name Dominic. After the sixth movie there was a decline in the name Dominic.\n\n\nRead and format data\n# Include and execute your code here\n\nfig = px.line(df.query('name == \"Dominic\" and year &gt; 1980'),\n  x=\"year\", \n  y=\"Total\", \n  color='name', \n  title='The Name Dominic Used Per Year')\n\nfig.add_trace(go.Scatter(\n    x=[2001, 2003, 2013],\n    y=[3387, 5216, 6306],\n    mode=\"markers\",\n    name=\"Release Dates\",\n    textposition=\"top center\"\n))\n\nfig.add_annotation(\n    x=2001,\n    y=3387,\n    text='Fast and Furious (2001)',\n    showarrow=True,\n    arrowhead=4,\n    ax=40,\n    ay=55\n)\n\nfig.add_annotation(\n    x=2013,\n    y=6306,\n    text='Fast 6 (2013)',\n    showarrow=True,\n    arrowhead=4,\n)\n\nfig.add_annotation(\n    x=2003,\n    y=5216,\n    text='2 Fast 2 Furious (2003)',\n    showarrow=True,\n    arrowhead=4,\n)\n\nfig.show()",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "Projects/project2.html",
    "href": "Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\n\nRead and format project data\n# Include and execute your code here\nurl_flights = 'https://github.com/byuidatascience/data4missing/raw/master/data-raw/flights_missing/flights_missing.json'\nflights = pd.read_json(url_flights)\n\n\nHighlight the Questions and Tasks",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "Projects/project2.html#elevator-pitch",
    "href": "Projects/project2.html#elevator-pitch",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\n\nRead and format project data\n# Include and execute your code here\nurl_flights = 'https://github.com/byuidatascience/data4missing/raw/master/data-raw/flights_missing/flights_missing.json'\nflights = pd.read_json(url_flights)\n\n\nHighlight the Questions and Tasks",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "Projects/project2.html#questiontask-1",
    "href": "Projects/project2.html#questiontask-1",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 1",
    "text": "QUESTION|TASK 1\nFix all of the varied missing data types in the data to be consistent (all missing values should be displayed as “NaN”). In your report include one record example (one row) from your new data, in the raw JSON format. Your example should display the “NaN” for at least one missing value.__\ntype your results and analysis here\n\n\nRead and format data\n# Include and execute your code here",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "Projects/project2.html#questiontask-2",
    "href": "Projects/project2.html#questiontask-2",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 2",
    "text": "QUESTION|TASK 2\nWhich airport has the worst delays? Discuss the metric you chose, and why you chose it to determine the “worst” airport. Your answer should include a summary table that lists (for each airport) the total number of flights, total number of delayed flights, proportion of delayed flights, and average delay time in hours.\nThe aiport with the worst delay is Chicago,IL: Chicago O’Hare International. On average throughout each month it is delayed 6,955 hours in delayed time.\n\n\nRead and format data\n# Include and execute your code here\nflights['Proportion of Delayed Flights'] = flights['num_of_delays_total'] / flights['num_of_flights_total']\n\nflights['hours_delayed'] = (flights.minutes_delayed_total / 60).round()\n\nairport_counts = flights['airport_name'].value_counts()\n\nsummary_table = flights[['airport_name', 'num_of_flights_total', 'num_of_delays_total', 'Proportion of Delayed Flights', 'hours_delayed']]\n\nsummary_table = summary_table.merge(airport_counts.rename('Repeat Airports'), left_on='airport_name', right_index=True)\n\ngrouped_summary = summary_table.groupby('airport_name').agg({\n    'num_of_flights_total': 'sum',\n    'num_of_delays_total': 'sum',\n    'Proportion of Delayed Flights': 'mean',\n    'hours_delayed': 'mean',\n    'Repeat Airports': 'sum'\n})\n\nsummary_table_sorted = grouped_summary.sort_values(by='hours_delayed', ascending=False)\n\nsummary_table_sorted.head()\n\n\n\n\n\n\n\n\n\nnum_of_flights_total\nnum_of_delays_total\nProportion of Delayed Flights\nhours_delayed\nRepeat Airports\n\n\nairport_name\n\n\n\n\n\n\n\n\n\nChicago, IL: Chicago O'Hare International\n3400032\n773122\n0.225372\n6955.360000\n15625\n\n\nAtlanta, GA: Hartsfield-Jackson Atlanta International\n4235114\n870910\n0.203671\n6893.484127\n15876\n\n\nSan Francisco, CA: San Francisco International\n1565257\n408631\n0.260695\n3344.960630\n16129\n\n\nDenver, CO: Denver International\n2323376\n439964\n0.188739\n3232.270492\n14884\n\n\n\n884879\n172413\n0.184811\n3158.321429\n3136",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "Projects/project2.html#questiontask-3",
    "href": "Projects/project2.html#questiontask-3",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 3",
    "text": "QUESTION|TASK 3\nWhat is the best month to fly if you want to avoid delays of any length? Discuss the metric you chose and why you chose it to calculate your answer. Include one chart to help support your answer, with the x-axis ordered by month. (To answer this question, you will need to remove any rows that are missing the Month variable.)\nThe best time to fly would be in the month of November. The delays of flight per hour are the smallest out of the rest of the year. The reason I chose to go with delay of time in hours is because amercans use hours to gage time rather than minutes. We think in how many hours it is going to take us to do something or how long of a delay it will be.\n\n\nRead and format data\n# Include and execute your code here\nflights_filtered = flights.dropna(subset=['month'])\n\naverage_delay_per_month = flights_filtered.groupby('month')['hours_delayed'].mean().reset_index()\n\nfig = px.line(average_delay_per_month, x='month', y='hours_delayed',\n             title='Average Delay Time by Month',\n             labels={'hours_delayed': 'Average Delay Time (hours)'},\n             color_discrete_sequence=['skyblue'])\nfig.update_layout(xaxis=dict(tickangle=45),\n                  yaxis=dict(title='Average Delay Time (hours)'),\n                  plot_bgcolor='rgba(0,0,0,0)')\nfig.show()",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "Projects/project2.html#questiontask-4",
    "href": "Projects/project2.html#questiontask-4",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 4",
    "text": "QUESTION|TASK 4\nAccording to the BTS website, the “Weather” category only accounts for severe weather delays. Mild weather delays are not counted in the “Weather” category, but are actually included in both the “NAS” and “Late-Arriving Aircraft” categories. Your job is to create a new column that calculates the total number of flights delayed by weather (both severe and mild). You will need to replace all the missing values in the Late Aircraft variable with the mean. Show your work by printing the first 5 rows of data in a table. Use these three rules for your calculations:__\n100% of delayed flights in the Weather category are due to weather\n30% of all delayed flights in the Late-Arriving category are due to weather.\nFrom April to August, 40% of delayed flights in the NAS category are due to weather. The rest of the months, the proportion rises to 65%.\n\n\n\nRead and format data\n# Include and execute your code here\nweather = (flights.assign(\n    severe = flights.num_of_delays_weather, # no missing\n    nodla_nona = lambda x: (x.num_of_delays_late_aircraft\n        .replace(-999, np.nan)), #missing is -999\n    mild_late = lambda x: x.nodla_nona.fillna(x.nodla_nona.mean())*0.3,\n    mild = np.where(\n        flights.month.isin(['April', 'May', 'June', 'July', 'August']), \n            flights.num_of_delays_nas*0.4,\n            flights.num_of_delays_nas*0.65),\n    weather = lambda x: x.severe + x.mild_late + x.mild,\n    proportion_weather_delay = lambda x: x.weather / x.num_of_delays_total,\n    proportion_weather_total = lambda x:  x.weather / x.num_of_flights_total)\n    .filter(['airport_code','month','year', 'severe','mild', 'mild_late',\n    'weather', 'proportion_weather_total', \n    'proportion_weather_delay', 'num_of_flights_total', 'num_of_delays_total']))\nweather.head()\n\n\n\n\n\n\n\n\n\nairport_code\nmonth\nyear\nsevere\nmild\nmild_late\nweather\nproportion_weather_total\nproportion_weather_delay\nnum_of_flights_total\nnum_of_delays_total\n\n\n\n\n0\nATL\nJanuary\n2005.0\n448\n2988.70\n332.731222\n3769.431222\n0.107551\n0.451159\n35048\n8355\n\n\n1\nDEN\nJanuary\n2005.0\n233\n607.75\n278.400000\n1119.150000\n0.088212\n0.354948\n12687\n3153\n\n\n2\nIAD\nJanuary\n2005.0\n61\n581.75\n317.400000\n960.150000\n0.077550\n0.395123\n12381\n2430\n\n\n3\nORD\nJanuary\n2005.0\n306\n3519.75\n676.500000\n4502.250000\n0.159688\n0.490548\n28194\n9178\n\n\n4\nSAN\nJanuary\n2005.0\n56\n414.70\n204.000000\n674.700000\n0.092640\n0.345645\n7283\n1952",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "Projects/project2.html#questiontask-5",
    "href": "Projects/project2.html#questiontask-5",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 5",
    "text": "QUESTION|TASK 5\nUsing the new weather variable calculated above, create a barplot showing the proportion of all flights that are delayed by weather at each airport. Discuss what you learn from this graph.\nMore flights are delayed due to weather in Orlando and San Francisco.\n\n\nRead and format data\n# Include and execute your code here\nfig = px.bar(weather, x='airport_code', y='proportion_weather_delay',\n             title='Proportion of Flights Delayed by Weather Per Airport',\n             labels={'proportion_weather_delay': 'Proportion of Delayed Flights by Weather'},\n             color='airport_code',\n             color_discrete_sequence=px.colors.qualitative.Safe)\n\nfig.update_layout(xaxis_title='Airport Code', yaxis_title='Proportion of Delayed Flights by Weather')\n\nfig.show()",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "full_stack.html",
    "href": "full_stack.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "full_stack.html#title-2-header",
    "href": "full_stack.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "story_telling.html",
    "href": "story_telling.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "story_telling.html#title-2-header",
    "href": "story_telling.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  }
]