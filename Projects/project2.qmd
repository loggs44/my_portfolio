---
title: "Client Report - Delayed Flights, Project 2"
subtitle: "Course DS 250"
author: "Logan Clark"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
```


## Elevator pitch

Flights on average are delayed the most in San Francisco International Airport. The Proportion of delayed flights there are 26%. The worst time to fly would be in June because the total delay time is 4,473 hours. The best time to fly is in Semtember with a total of 2,546 hours in delay time. San Francisco International airport has the most delays due to weather when compared to the other aiprorts.

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
url_flights = 'https://github.com/byuidatascience/data4missing/raw/master/data-raw/flights_missing/flights_missing.json'
flights = pd.read_json(url_flights)
```

__Highlight the Questions and Tasks__

## QUESTION|TASK 1

Fix all of the varied missing data types in the data to be consistent (all missing values should be displayed as “NaN”). In your report include one record example (one row) from your new data, in the raw JSON format. Your example should display the “NaN” for at least one missing value.__

<!-- _type your results and analysis here_ -->

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here
flights.month.replace(['NaN','n/a'],np.nan,inplace=True)
flights.month.replace('Febuary','February',inplace=True)
flights.num_of_delays_late_aircraft.replace(-999,np.nan,inplace=True)
flights.num_of_delays_carrier.replace('1500+',1500,inplace=True)
flights.airport_name.replace('','Washington, DC: Washington Dulles International',inplace=True)

flights['month'] = flights['month'].ffill()

flights.to_json()

```

## QUESTION|TASK 2

Which airport has the worst delays? Discuss the metric you chose, and why you chose it to determine the “worst” airport. Your answer should include a summary table that lists (for each airport) the total number of flights, total number of delayed flights, proportion of delayed flights, and average delay time in hours.

The aiport with the worst delay is San Francisco International Airport. The Proportion of their flight delayed is 0.26. Meaning that per flight they are usually delayed or arrive late. 

```{python}
#| label: Q2
#| code-summary: Read and format data
# Include and execute your code here
flights['Proportion of Delayed Flights'] = flights['num_of_delays_total'] / flights['num_of_flights_total']

flights['hours_delayed'] = (flights.minutes_delayed_total / 60).round()

airport_counts = flights['airport_name'].value_counts()

summary_table = flights[['airport_name', 'num_of_flights_total', 'num_of_delays_total', 'Proportion of Delayed Flights', 'hours_delayed']]

summary_table = summary_table.merge(airport_counts.rename('Repeat Airports'), left_on='airport_name', right_index=True)

grouped_summary = summary_table.groupby('airport_name').agg({
    'num_of_flights_total': 'sum',
    'num_of_delays_total': 'sum',
    'Proportion of Delayed Flights': 'mean',
    'hours_delayed': 'mean',
    'Repeat Airports': 'sum'
})

summary_table_sorted = grouped_summary.sort_values(by='Proportion of Delayed Flights', ascending=False)

summary_table_sorted.head()
```

## QUESTION|TASK 3

What is the best month to fly if you want to avoid delays of any length? Discuss the metric you chose and why you chose it to calculate your answer. Include one chart to help support your answer, with the x-axis ordered by month. (To answer this question, you will need to remove any rows that are missing the Month variable.)

The best time to fly would be in the month of September. The delays of flight per hour are the smallest out of the rest of the year. The reason I chose to go with average delay time is becuase I wanted to see who had the lowest average delay time. This will help me to gage when to fly and when not to fly.

```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here
# Define the order of months
flights['month'] = pd.Categorical(flights['month'], categories=month_order, ordered=True)

average_delay_per_month = flights.groupby('month', sort=False)['hours_delayed'].mean().reset_index()


fig = px.bar(average_delay_per_month, x='month', y='hours_delayed',
             title='Average Delay Time by Month',
             labels={'hours_delayed': 'Average Delay Time (hours)'})

fig.show()

```

## QUESTION|TASK 4

According to the BTS website, the “Weather” category only accounts for severe weather delays. Mild weather delays are not counted in the “Weather” category, but are actually included in both the “NAS” and “Late-Arriving Aircraft” categories. Your job is to create a new column that calculates the total number of flights delayed by weather (both severe and mild). You will need to replace all the missing values in the Late Aircraft variable with the mean. Show your work by printing the first 5 rows of data in a table. Use these three rules for your calculations:__

100% of delayed flights in the Weather category are due to weather

30% of all delayed flights in the Late-Arriving category are due to weather.

From April to August, 40% of delayed flights in the NAS category are due to weather. The rest of the months, the proportion rises to 65%.

The table below will show us how many flights are delayed by severe and mild weather. It will also show us the proportion of delayed flights that are due to weather per airport.

```{python}
#| label: Q4
#| code-summary: Read and format data
# Include and execute your code here
weather = (flights.assign(
    severe = flights.num_of_delays_weather, # no missing
    nodla_nona = lambda x: (x.num_of_delays_late_aircraft
        .replace(-999, np.nan)), #missing is -999
    mild_late = lambda x: x.nodla_nona.fillna(x.nodla_nona.mean())*0.3,
    mild = np.where(
        flights.month.isin(['April', 'May', 'June', 'July', 'August']), 
            flights.num_of_delays_nas*0.4,
            flights.num_of_delays_nas*0.65),
    weather = lambda x: x.severe + x.mild_late + x.mild,
    proportion_weather_delay = lambda x: x.weather / x.num_of_delays_total,
    proportion_weather_total = lambda x:  x.weather / x.num_of_flights_total)
    .filter(['airport_code','month','year', 'severe','mild', 'mild_late',
    'weather', 'proportion_weather_total', 
    'proportion_weather_delay', 'num_of_flights_total', 'num_of_delays_total']))
weather.head()

```

## QUESTION|TASK 5

Using the new weather variable calculated above, create a barplot showing the proportion of all flights that are delayed by weather at each airport. Discuss what you learn from this graph.

San Francisco International Airport has the worst weather delays out of the rest of the airports. It has significantly more flights delyed by all types of weather than the other airport.

```{python}
#| label: Q5
#| code-summary: Read and format data
# Include and execute your code here
fig = px.bar(weather, x='airport_code', y='proportion_weather_total',
             title='Proportion of Flights Delayed by Weather Per Airport',
             labels={'proportion_weather_delay': 'Proportion of Delayed Flights by Weather'},
             color='airport_code')

fig.update_layout(xaxis_title='Airport Code', yaxis_title='Proportion of Delayed Flights by Weather')

fig.show()


```